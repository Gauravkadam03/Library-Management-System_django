
                  ------------------------------Django---------------------------------


Frame work :  A framework may include predefined classes and functions that can used to process input,manage hardware
              devices, and intract with system software.

              the purspose of framework is to allow developers to focus on building a unique feature for their projects
              rather than writing code from scratch.

    why use framework----------- 
                                 collection of tools 
                                 no need to start from scratch
                                 save time
                                 improve productivity
                                 clean code
                                 reusable code
                                 testing
                                 debugging

_____________________________________________________________________________________________________

web Framework :   a web frame work or webapplication frame work which helps to build web-applications.
                  
                  a framework provide tools and liabraries to simplify common web development operations. this include
                  web services, apis and other resources.

                  web framework help with a variaty of tasks, from templating and database access to session management 
                  and code reuse.

                  more than 80% of all web app frameworks rely on the model view controler architecture.

    some web Framework ------
                             Django
                             spring 
                             zend 
                             laravel
                             codeigniter

_____________________________________________________________________________________________________



Django  :  Django was invented by Lawrence Journal-World in 2003, to meet the short deadlines in the 
           newspaper and at the same time meeting the demands of experienced web developers.
           Initial release to the public was in July 2005.

           Latest version of Django is 4.0.3 (March 2022).
        
    what we can build using django ---
                                      high end web applications
                                      it encourages rapid development and clean,programatic design.
                                    eg.  youtube
                                         instagram
                                         spotify
                                         nasa  


------>   Django is a Python-based programming web framework. It's a Python coding tool that adds 
          functionality and speeds up the process.
          It is based on MVT (Model View Template) design pattern.

------>  Features of Django
           - Rapid Development
           - Secure
           - Scalable
           - Fully loaded
           - Versatile
           - Open Source
           - Vast and Supported Community

        --    Rapid Development
            Django was designed with the intention to make a framework which takes less time to build web application. The project implementation phase is a very time taken but Django creates it rapidly.

        --    Secure
            Django takes security seriously and helps developers to avoid many common security mistakes, such as SQL injection, cross-site scripting, cross-site request forgery etc. Its user authentication system provides a secure way to manage user accounts and passwords.

        --    Scalable
            Django is scalable in nature and has ability to quickly and flexibly switch from small to large scale application project.

        --    Fully loaded
            Django includes various helping task modules and libraries which can be used to handle common Web development tasks. Django takes care of user authentication, content administration, site maps, RSS feeds etc.

        --    Versatile
            Django is versatile in nature which allows it to build applications for different-different domains. Now a days, Companies are using Django to build various types of applications like: content management systems, social networks sites or scientific computing platforms etc.

        --    Open Source
            Django is an open source web application framework. It is publicly available without cost. It can be downloaded with source code from the public repository. Open source reduces the total cost of the application development.

        --    Vast and Supported Community
            Django is an one of the most popular web framework. It has widely supportive community and channels to share and connect.
_____________________________________________________________________________________________________

application directory structure : 
                        migrations : this folder contains __init__ .py file which means it's a python package. it also 
                                     contains all files which are created after running makemigration command.
                         __init__ .py --- this file consider as python  package 

                        admin.py :  this file used to register sql tables so we could perform CRUD operations from      
                                    admin application . admin application is provided by django .

                        apps.py : this file used to config app

                        models.py : this file used to create our own model class later these classes will be converted 
                                    into database table by django for our application.
                        
                        testss.py : this file used to create testss

                        views.py : this file used to create view. we write all the business logic related code 
                                   in this file.

_____________________________________________________________________________________________________

Django MVT pattern : [model-view-template]
                      
                    The MVT (Model View Template) is a software design pattern. It is a collection of three important components Model View and Template. 

        why use mvt ----
                        organised code 
                        independent block
                        easy to maintain
                        easy to modify
                        reduces the complexity of web applications.
_____________________________________________________________________________________________________

Model : models.py  [database logic]
        
        The Model helps to handle database. It is a data access layer which handles the data.
        a model is a class that represents table or collection in our database, and where every 
        attribute[variable] of the class is a row(field) of the table or collection.
    --  are defined in the app/models.py

            py manage.py makemigrations # use to generate sql code from python code
            py manage.py migrate # refelect sql code on database.

            admin.py file:
                # register your model here
                from appname.models import ClassName
                admin.site.register(ClassName)


  eg.  models.py
         class student(models.Model):
            name=models.charfield(max_length=50)
            roll=models.IntegerField()


       views.py
          from .models import table_name (class name)

          def display(request):
            a=student(name='gaurav',roll=2)
            a.save()
            return render(request,)

_____________________________________________________________________________________________________

ORM ---- Object Reletional Mapping

Django api (applicaion programming interface)-- to execute django orm querry we can use django api

--- using py shell

        ------> py manage.py shell
        ------> from app_name.models import student
        ------> a=student(name='garry',roll=3)  ------------ insert operation
        ------> a.save()
        ------> a=student.objects.all()        ---------- select * operation
        ------> a=student.objects.get(name='garry)  ------ where clause for single value
        ------> a.name='harry'                       ----- update operation
        ------> a.save()
        ------> a=student.objects.get(name='garry)   ----- delete operation
        ------> a.delete()
        ------> a=student.objects.filter(name='garry)  ------ where clause for multiple value
           --- returns list of objects
           filtre operations ---
                                 a=student.objects.filtre(roll_gt=80)
                                 a=student.objects.filtre(roll_lt=80)
                                 a=student.objects.filtre(name_startswith='s')
                                 a=student.objects.filtre(name_endswith='g')
                                 a=student.objects.filtre(name_contains='gt')

    
_____________________________________________________________________________________________________


View : views.py [bussiness logic] the name of the view does not have to be the same as the 
       application

       The View is used to execute the business logic and interact with a model to carry data and renders a template.

       A view function is a Python function that takes a Web request and returns a Web response. This response can be the HTML contents of a Web page, or a redirect, or a 404 error, or an XML document, or an image, anything that a web browser can display.

       Django views are part of the user interface — they usually render the HTML/CSS/Javascript in your Template files into what you see in your browser when you render a web page.

    -- there are two types of views  :
                                      1.  class based
                                      2.  function based --- mostly used
       
        
        
_____________________________________________________________________________________________________


Template : Templates [presentation logic]
           
           The Template is a presentation layer which handles User Interface part completely.

           A template in Django is basically written in HTML, CSS, and Javascript in a .html file. Django framework efficiently handles and generates dynamically HTML web pages that are visible to the end-user.

    -- how to create template --
                    
            ------> create templates folder in app_file
            ------> inside templates create folder name same as app name
            ------> add html files

    -- how to add css file to html file--  it called static files
    --- static files contains css,js,img,videos

            ------> create static folder in app_file
            ------> inside that create css,js,img,videos folder
        

